<launch>
	<arg name="marker_size" default="4.5" />
	<arg name="max_new_marker_error" default="0.08" />
	<arg name="max_track_error" default="0.2" />
	<arg name="cam_image_topic" default="/camera_robotino/usb_cam/image_raw" />
	<arg name="cam_info_topic" default="/camera_robotino/usb_cam/camera_info" />
	<arg name="output_frame" default="/camera_robotino" />

	<node name="ar_track_alvar0" pkg="ar_track_alvar" type="individualMarkersNoKinect" respawn="false" output="screen">
		<param name="marker_size"           type="double" value="$(arg marker_size)" />
		<param name="max_new_marker_error"  type="double" value="$(arg max_new_marker_error)" />
		<param name="max_track_error"       type="double" value="$(arg max_track_error)" />
		<param name="output_frame"          type="string" value="$(arg output_frame)" />

		<remap from="camera_image"  to="$(arg cam_image_topic)" />
		<remap from="camera_info"   to="$(arg cam_info_topic)" />
	</node>


  <node name="usb_cam" pkg="usb_cam" type="usb_cam_node" output="screen" ns="camera_robotino">
    <param name="video_device" value="/dev/video1" />
    <param name="image_width" value="640" />
    <param name="image_height" value="480" />
    <param name="pixel_format" value="yuyv" />
    <param name="camera_frame_id" value="camera_robotino" />
    <param name="io_method" value="mmap"/>
    <param name="camera_info_url" value="file:///home/wilhelm/wilhelm_ws1/src/nodes_on_robotino/1080_new_cam.yaml"/>
  </node>

<node name="my_tf_static_publisher4" pkg="tf2_ros" type="static_transform_publisher" respawn="false" output="screen" args="0 0 0 0 0 0 ar_marker_8 robotino_from_ar_8" />

  <!--<node name="node_3" pkg="nodes_on_robotino" type="node_3"/>-->

</launch>
